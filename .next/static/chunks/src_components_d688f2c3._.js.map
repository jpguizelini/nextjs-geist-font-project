{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Navigation.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport Link from 'next/link'\nimport { motion, AnimatePresence } from 'framer-motion'\n\nexport default function Navigation() {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const toggleMenu = () => setIsOpen(!isOpen)\n\n  const menuItems = [\n    { href: '/', label: 'Home' },\n    { href: '/gallery', label: 'Gallery' },\n    { href: '/donate', label: 'Donate' },\n    { href: '/nft', label: 'NFT Dashboard' },\n  ]\n\n  return (\n    <motion.header \n      className=\"sticky top-0 z-50 bg-black/90 backdrop-blur-md border-b border-white/10\"\n      initial={{ y: -100 }}\n      animate={{ y: 0 }}\n      transition={{ duration: 0.5 }}\n    >\n      <nav className=\"container mx-auto px-4 py-4\">\n        <div className=\"flex items-center justify-between\">\n          {/* Logo */}\n          <Link href=\"/\" className=\"text-2xl font-bold text-white\">\n            URBAN SKATE\n          </Link>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            {menuItems.map((item) => (\n              <Link\n                key={item.href}\n                href={item.href}\n                className=\"text-white hover:text-gray-300 transition-colors duration-200 font-medium\"\n              >\n                {item.label}\n              </Link>\n            ))}\n          </div>\n\n          {/* Mobile Menu Button */}\n          <button\n            onClick={toggleMenu}\n            className=\"md:hidden text-white focus:outline-none\"\n            aria-label=\"Toggle menu\"\n          >\n            <div className=\"w-6 h-6 flex flex-col justify-center items-center\">\n              <motion.span\n                className=\"w-6 h-0.5 bg-white block transition-all duration-300\"\n                animate={isOpen ? { rotate: 45, y: 2 } : { rotate: 0, y: 0 }}\n              />\n              <motion.span\n                className=\"w-6 h-0.5 bg-white block mt-1 transition-all duration-300\"\n                animate={isOpen ? { opacity: 0 } : { opacity: 1 }}\n              />\n              <motion.span\n                className=\"w-6 h-0.5 bg-white block mt-1 transition-all duration-300\"\n                animate={isOpen ? { rotate: -45, y: -2 } : { rotate: 0, y: 0 }}\n              />\n            </div>\n          </button>\n        </div>\n\n        {/* Mobile Menu */}\n        <AnimatePresence>\n          {isOpen && (\n            <motion.div\n              className=\"md:hidden mt-4 pb-4\"\n              initial={{ opacity: 0, height: 0 }}\n              animate={{ opacity: 1, height: 'auto' }}\n              exit={{ opacity: 0, height: 0 }}\n              transition={{ duration: 0.3 }}\n            >\n              <div className=\"flex flex-col space-y-4\">\n                {menuItems.map((item) => (\n                  <Link\n                    key={item.href}\n                    href={item.href}\n                    className=\"text-white hover:text-gray-300 transition-colors duration-200 font-medium py-2\"\n                    onClick={() => setIsOpen(false)}\n                  >\n                    {item.label}\n                  </Link>\n                ))}\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </nav>\n    </motion.header>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;;;AAJA;;;;AAMe,SAAS;;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,aAAa,IAAM,UAAU,CAAC;IAEpC,MAAM,YAAY;QAChB;YAAE,MAAM;YAAK,OAAO;QAAO;QAC3B;YAAE,MAAM;YAAY,OAAO;QAAU;QACrC;YAAE,MAAM;YAAW,OAAO;QAAS;QACnC;YAAE,MAAM;YAAQ,OAAO;QAAgB;KACxC;IAED,qBACE,6LAAC,6LAAA,CAAA,SAAM,CAAC,MAAM;QACZ,WAAU;QACV,SAAS;YAAE,GAAG,CAAC;QAAI;QACnB,SAAS;YAAE,GAAG;QAAE;QAChB,YAAY;YAAE,UAAU;QAAI;kBAE5B,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC,+JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAI,WAAU;sCAAgC;;;;;;sCAKzD,6LAAC;4BAAI,WAAU;sCACZ,UAAU,GAAG,CAAC,CAAC,qBACd,6LAAC,+JAAA,CAAA,UAAI;oCAEH,MAAM,KAAK,IAAI;oCACf,WAAU;8CAET,KAAK,KAAK;mCAJN,KAAK,IAAI;;;;;;;;;;sCAUpB,6LAAC;4BACC,SAAS;4BACT,WAAU;4BACV,cAAW;sCAEX,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,6LAAA,CAAA,SAAM,CAAC,IAAI;wCACV,WAAU;wCACV,SAAS,SAAS;4CAAE,QAAQ;4CAAI,GAAG;wCAAE,IAAI;4CAAE,QAAQ;4CAAG,GAAG;wCAAE;;;;;;kDAE7D,6LAAC,6LAAA,CAAA,SAAM,CAAC,IAAI;wCACV,WAAU;wCACV,SAAS,SAAS;4CAAE,SAAS;wCAAE,IAAI;4CAAE,SAAS;wCAAE;;;;;;kDAElD,6LAAC,6LAAA,CAAA,SAAM,CAAC,IAAI;wCACV,WAAU;wCACV,SAAS,SAAS;4CAAE,QAAQ,CAAC;4CAAI,GAAG,CAAC;wCAAE,IAAI;4CAAE,QAAQ;4CAAG,GAAG;wCAAE;;;;;;;;;;;;;;;;;;;;;;;8BAOrE,6LAAC,4LAAA,CAAA,kBAAe;8BACb,wBACC,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;wBACT,WAAU;wBACV,SAAS;4BAAE,SAAS;4BAAG,QAAQ;wBAAE;wBACjC,SAAS;4BAAE,SAAS;4BAAG,QAAQ;wBAAO;wBACtC,MAAM;4BAAE,SAAS;4BAAG,QAAQ;wBAAE;wBAC9B,YAAY;4BAAE,UAAU;wBAAI;kCAE5B,cAAA,6LAAC;4BAAI,WAAU;sCACZ,UAAU,GAAG,CAAC,CAAC,qBACd,6LAAC,+JAAA,CAAA,UAAI;oCAEH,MAAM,KAAK,IAAI;oCACf,WAAU;oCACV,SAAS,IAAM,UAAU;8CAExB,KAAK,KAAK;mCALN,KAAK,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAelC;GA1FwB;KAAA","debugId":null}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/DonationFlow/PixPayment.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { motion } from 'framer-motion'\n\ninterface PixPaymentProps {\n  amount: number\n}\n\nexport default function PixPayment({ amount }: PixPaymentProps) {\n  const [qrCode, setQrCode] = useState<string>('')\n  const [pixKey, setPixKey] = useState<string>('')\n  const [copied, setCopied] = useState(false)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    // Simulate QR code generation\n    const generatePixPayment = async () => {\n      setLoading(true)\n      \n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 2000))\n      \n      // Generate mock PIX key and QR code\n      const mockPixKey = `00020126580014BR.GOV.BCB.PIX0136${Math.random().toString(36).substring(2, 15)}520400005303986540${amount.toFixed(2)}5802BR5925Urban Skate Track6009SAO PAULO62070503***6304${Math.random().toString(36).substring(2, 6).toUpperCase()}`\n      \n      setPixKey(mockPixKey)\n      \n      // In a real implementation, you would generate an actual QR code\n      // For demo purposes, we'll use a placeholder\n      setQrCode(`data:image/svg+xml;base64,${btoa(`\n        <svg width=\"200\" height=\"200\" xmlns=\"http://www.w3.org/2000/svg\">\n          <rect width=\"200\" height=\"200\" fill=\"white\"/>\n          <rect x=\"20\" y=\"20\" width=\"160\" height=\"160\" fill=\"black\"/>\n          <rect x=\"40\" y=\"40\" width=\"120\" height=\"120\" fill=\"white\"/>\n          <rect x=\"60\" y=\"60\" width=\"80\" height=\"80\" fill=\"black\"/>\n          <text x=\"100\" y=\"105\" text-anchor=\"middle\" fill=\"white\" font-size=\"12\">PIX QR</text>\n        </svg>\n      `)}`)\n      \n      setLoading(false)\n    }\n\n    generatePixPayment()\n  }, [amount])\n\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(pixKey)\n      setCopied(true)\n      setTimeout(() => setCopied(false), 2000)\n    } catch (err) {\n      console.error('Failed to copy:', err)\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"text-center py-8\">\n        <motion.div\n          className=\"inline-block w-8 h-8 border-4 border-gray-300 border-t-black rounded-full\"\n          animate={{ rotate: 360 }}\n          transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n        />\n        <p className=\"mt-4 text-gray-600\">Generating PIX payment...</p>\n      </div>\n    )\n  }\n\n  return (\n    <motion.div\n      className=\"text-center py-8\"\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n    >\n      <h2 className=\"text-2xl font-bold text-black mb-4\">\n        PIX Payment\n      </h2>\n      <p className=\"text-gray-600 mb-6\">\n        Scan the QR code or copy the PIX key to complete your ${amount} donation\n      </p>\n\n      <div className=\"bg-white p-6 rounded-lg border-2 border-gray-200 max-w-md mx-auto mb-6\">\n        {/* QR Code */}\n        <div className=\"mb-6\">\n          <img\n            src={qrCode}\n            alt=\"PIX QR Code\"\n            className=\"w-48 h-48 mx-auto border border-gray-200\"\n          />\n        </div>\n\n        {/* PIX Key */}\n        <div className=\"mb-4\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            PIX Key (Copy and Paste)\n          </label>\n          <div className=\"flex\">\n            <input\n              type=\"text\"\n              value={pixKey}\n              readOnly\n              className=\"flex-1 px-3 py-2 border border-gray-300 bg-gray-50 text-xs font-mono\"\n            />\n            <button\n              onClick={copyToClipboard}\n              className={`px-4 py-2 ml-2 font-semibold transition-colors ${\n                copied\n                  ? 'bg-green-500 text-white'\n                  : 'bg-black text-white hover:bg-gray-800'\n              }`}\n            >\n              {copied ? 'Copied!' : 'Copy'}\n            </button>\n          </div>\n        </div>\n\n        {/* Instructions */}\n        <div className=\"text-left text-sm text-gray-600 space-y-2\">\n          <p className=\"font-semibold\">How to pay:</p>\n          <ol className=\"list-decimal list-inside space-y-1\">\n            <li>Open your bank app</li>\n            <li>Go to PIX section</li>\n            <li>Scan the QR code or paste the PIX key</li>\n            <li>Confirm the payment details</li>\n            <li>Complete the transaction</li>\n          </ol>\n        </div>\n      </div>\n\n      {/* Payment Status */}\n      <div className=\"bg-yellow-50 border border-yellow-200 p-4 rounded-lg\">\n        <p className=\"text-yellow-800 text-sm\">\n          <strong>Waiting for payment confirmation...</strong>\n          <br />\n          Your donation will be confirmed automatically once the payment is processed.\n        </p>\n      </div>\n\n      {/* Support Info */}\n      <div className=\"mt-6 text-sm text-gray-500\">\n        <p>Having trouble? Contact our support team for assistance.</p>\n      </div>\n    </motion.div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 539, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/DonationFlow/CryptoPayment.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { motion } from 'framer-motion'\n\ninterface CryptoPaymentProps {\n  amount: number\n}\n\ninterface WalletInfo {\n  address: string\n  balance: string\n  connected: boolean\n}\n\nexport default function CryptoPayment({ amount }: CryptoPaymentProps) {\n  const [walletInfo, setWalletInfo] = useState<WalletInfo | null>(null)\n  const [connecting, setConnecting] = useState(false)\n  const [transactionHash, setTransactionHash] = useState<string>('')\n  const [paymentStatus, setPaymentStatus] = useState<'idle' | 'pending' | 'success' | 'error'>('idle')\n\n  // Mock wallet addresses for different cryptocurrencies\n  const cryptoAddresses = {\n    ethereum: '0x742d35Cc6634C0532925a3b8D4C9db96590b5c8e',\n    bitcoin: '1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa',\n  }\n\n  const connectWallet = async () => {\n    setConnecting(true)\n    \n    try {\n      // Check if MetaMask is installed\n      if (typeof window !== 'undefined' && (window as any).ethereum) {\n        // Request account access\n        const accounts = await (window as any).ethereum.request({\n          method: 'eth_requestAccounts'\n        })\n        \n        if (accounts.length > 0) {\n          // Get balance (mock for demo)\n          const mockBalance = (Math.random() * 10).toFixed(4)\n          \n          setWalletInfo({\n            address: accounts[0],\n            balance: mockBalance,\n            connected: true\n          })\n        }\n      } else {\n        // MetaMask not installed - show mock connection for demo\n        await new Promise(resolve => setTimeout(resolve, 2000))\n        \n        setWalletInfo({\n          address: '0x742d35Cc6634C0532925a3b8D4C9db96590b5c8e',\n          balance: '2.5847',\n          connected: true\n        })\n      }\n    } catch (error) {\n      console.error('Failed to connect wallet:', error)\n      alert('Failed to connect wallet. Please try again.')\n    } finally {\n      setConnecting(false)\n    }\n  }\n\n  const disconnectWallet = () => {\n    setWalletInfo(null)\n    setPaymentStatus('idle')\n    setTransactionHash('')\n  }\n\n  const sendPayment = async () => {\n    if (!walletInfo) return\n    \n    setPaymentStatus('pending')\n    \n    try {\n      // In a real implementation, this would interact with the blockchain\n      // For demo purposes, we'll simulate a transaction\n      await new Promise(resolve => setTimeout(resolve, 3000))\n      \n      // Generate mock transaction hash\n      const mockTxHash = '0x' + Math.random().toString(16).substring(2, 66)\n      setTransactionHash(mockTxHash)\n      setPaymentStatus('success')\n      \n    } catch (error) {\n      console.error('Payment failed:', error)\n      setPaymentStatus('error')\n    }\n  }\n\n  const formatAddress = (address: string) => {\n    return `${address.slice(0, 6)}...${address.slice(-4)}`\n  }\n\n  return (\n    <motion.div\n      className=\"py-8\"\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n    >\n      <div className=\"text-center mb-8\">\n        <h2 className=\"text-2xl font-bold text-black mb-4\">\n          Cryptocurrency Payment\n        </h2>\n        <p className=\"text-gray-600\">\n          Connect your wallet to donate ${amount} in cryptocurrency\n        </p>\n      </div>\n\n      {!walletInfo ? (\n        /* Wallet Connection */\n        <div className=\"max-w-md mx-auto\">\n          <div className=\"bg-gray-50 p-6 rounded-lg border border-gray-200 mb-6\">\n            <h3 className=\"text-lg font-semibold text-black mb-4\">\n              Connect Your Wallet\n            </h3>\n            <p className=\"text-gray-600 text-sm mb-6\">\n              Connect your cryptocurrency wallet to proceed with the donation. \n              We support MetaMask and other Web3 wallets.\n            </p>\n            \n            <button\n              onClick={connectWallet}\n              disabled={connecting}\n              className={`w-full py-3 px-4 font-semibold transition-colors ${\n                connecting\n                  ? 'bg-gray-400 text-white cursor-not-allowed'\n                  : 'bg-black text-white hover:bg-gray-800'\n              }`}\n            >\n              {connecting ? (\n                <div className=\"flex items-center justify-center\">\n                  <motion.div\n                    className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full mr-2\"\n                    animate={{ rotate: 360 }}\n                    transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n                  />\n                  Connecting...\n                </div>\n              ) : (\n                'Connect Wallet'\n              )}\n            </button>\n          </div>\n\n          {/* Alternative Payment Methods */}\n          <div className=\"bg-blue-50 border border-blue-200 p-4 rounded-lg\">\n            <h4 className=\"font-semibold text-blue-800 mb-2\">\n              Alternative Crypto Donations\n            </h4>\n            <p className=\"text-blue-700 text-sm mb-3\">\n              You can also send donations directly to our wallet addresses:\n            </p>\n            <div className=\"space-y-2 text-sm\">\n              <div>\n                <span className=\"font-medium\">Ethereum (ETH):</span>\n                <br />\n                <code className=\"bg-white px-2 py-1 rounded text-xs\">\n                  {cryptoAddresses.ethereum}\n                </code>\n              </div>\n              <div>\n                <span className=\"font-medium\">Bitcoin (BTC):</span>\n                <br />\n                <code className=\"bg-white px-2 py-1 rounded text-xs\">\n                  {cryptoAddresses.bitcoin}\n                </code>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        /* Wallet Connected */\n        <div className=\"max-w-md mx-auto\">\n          <div className=\"bg-green-50 border border-green-200 p-4 rounded-lg mb-6\">\n            <div className=\"flex justify-between items-start mb-2\">\n              <h3 className=\"text-lg font-semibold text-green-800\">\n                Wallet Connected\n              </h3>\n              <button\n                onClick={disconnectWallet}\n                className=\"text-green-600 hover:text-green-800 text-sm\"\n              >\n                Disconnect\n              </button>\n            </div>\n            <p className=\"text-green-700 text-sm mb-2\">\n              <strong>Address:</strong> {formatAddress(walletInfo.address)}\n            </p>\n            <p className=\"text-green-700 text-sm\">\n              <strong>Balance:</strong> {walletInfo.balance} ETH\n            </p>\n          </div>\n\n          {paymentStatus === 'idle' && (\n            <div className=\"bg-white border border-gray-200 p-6 rounded-lg mb-6\">\n              <h4 className=\"font-semibold text-black mb-4\">\n                Donation Details\n              </h4>\n              <div className=\"space-y-2 text-sm text-gray-600 mb-6\">\n                <div className=\"flex justify-between\">\n                  <span>Donation Amount:</span>\n                  <span className=\"font-semibold\">${amount} USD</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Estimated ETH:</span>\n                  <span className=\"font-semibold\">~{(amount / 2000).toFixed(6)} ETH</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Network Fee:</span>\n                  <span className=\"font-semibold\">~0.002 ETH</span>\n                </div>\n              </div>\n              \n              <button\n                onClick={sendPayment}\n                className=\"w-full bg-black text-white py-3 px-4 font-semibold hover:bg-gray-800 transition-colors\"\n              >\n                Send Donation\n              </button>\n            </div>\n          )}\n\n          {paymentStatus === 'pending' && (\n            <div className=\"bg-yellow-50 border border-yellow-200 p-6 rounded-lg text-center\">\n              <motion.div\n                className=\"inline-block w-8 h-8 border-4 border-yellow-300 border-t-yellow-600 rounded-full mb-4\"\n                animate={{ rotate: 360 }}\n                transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n              />\n              <h4 className=\"font-semibold text-yellow-800 mb-2\">\n                Processing Transaction\n              </h4>\n              <p className=\"text-yellow-700 text-sm\">\n                Please confirm the transaction in your wallet and wait for blockchain confirmation.\n              </p>\n            </div>\n          )}\n\n          {paymentStatus === 'success' && (\n            <div className=\"bg-green-50 border border-green-200 p-6 rounded-lg text-center\">\n              <div className=\"text-green-600 text-4xl mb-4\">✓</div>\n              <h4 className=\"font-semibold text-green-800 mb-2\">\n                Donation Successful!\n              </h4>\n              <p className=\"text-green-700 text-sm mb-4\">\n                Thank you for your ${amount} donation to Urban Skate Track!\n              </p>\n              <div className=\"bg-white p-3 rounded border\">\n                <p className=\"text-xs text-gray-600 mb-1\">Transaction Hash:</p>\n                <code className=\"text-xs break-all\">{transactionHash}</code>\n              </div>\n              <p className=\"text-green-600 text-xs mt-2\">\n                View on Etherscan: \n                <a \n                  href={`https://etherscan.io/tx/${transactionHash}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"underline ml-1\"\n                >\n                  {formatAddress(transactionHash)}\n                </a>\n              </p>\n            </div>\n          )}\n\n          {paymentStatus === 'error' && (\n            <div className=\"bg-red-50 border border-red-200 p-6 rounded-lg text-center\">\n              <div className=\"text-red-600 text-4xl mb-4\">✗</div>\n              <h4 className=\"font-semibold text-red-800 mb-2\">\n                Transaction Failed\n              </h4>\n              <p className=\"text-red-700 text-sm mb-4\">\n                There was an error processing your donation. Please try again.\n              </p>\n              <button\n                onClick={() => setPaymentStatus('idle')}\n                className=\"bg-red-600 text-white px-4 py-2 text-sm hover:bg-red-700 transition-colors\"\n              >\n                Try Again\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Security Notice */}\n      <div className=\"mt-8 max-w-md mx-auto\">\n        <div className=\"bg-gray-50 border border-gray-200 p-4 rounded-lg\">\n          <h4 className=\"font-semibold text-gray-800 mb-2 text-sm\">\n            Security Notice\n          </h4>\n          <p className=\"text-gray-600 text-xs\">\n            Always verify the recipient address before sending cryptocurrency. \n            Transactions are irreversible. We recommend starting with a small test transaction.\n          </p>\n        </div>\n      </div>\n    </motion.div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1234, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/DonationFlow/DonationForm.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { z } from 'zod'\nimport PixPayment from './PixPayment'\nimport CryptoPayment from './CryptoPayment'\n\nconst donationSchema = z.object({\n  amount: z.number().min(1, 'Amount must be at least $1'),\n  paymentMethod: z.enum(['pix', 'crypto', 'card'], {\n    required_error: 'Please select a payment method',\n  }),\n  email: z.string().email('Please enter a valid email'),\n  name: z.string().min(2, 'Name must be at least 2 characters'),\n})\n\ntype DonationFormData = z.infer<typeof donationSchema>\n\nconst steps = [\n  { id: 1, title: 'Amount', description: 'Choose donation amount' },\n  { id: 2, title: 'Method', description: 'Select payment method' },\n  { id: 3, title: 'Details', description: 'Enter your information' },\n  { id: 4, title: 'Payment', description: 'Complete donation' },\n]\n\nconst predefinedAmounts = [10, 25, 50, 100, 250, 500]\n\nexport default function DonationForm() {\n  const [currentStep, setCurrentStep] = useState(1)\n  const [customAmount, setCustomAmount] = useState('')\n  const [selectedAmount, setSelectedAmount] = useState<number | null>(null)\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    formState: { errors, isValid },\n  } = useForm<DonationFormData>({\n    resolver: zodResolver(donationSchema),\n    mode: 'onChange',\n  })\n\n  const watchedValues = watch()\n\n  const nextStep = () => {\n    if (currentStep < 4) {\n      setCurrentStep(currentStep + 1)\n    }\n  }\n\n  const prevStep = () => {\n    if (currentStep > 1) {\n      setCurrentStep(currentStep - 1)\n    }\n  }\n\n  const handleAmountSelect = (amount: number) => {\n    setSelectedAmount(amount)\n    setValue('amount', amount)\n    setCustomAmount('')\n  }\n\n  const handleCustomAmount = (value: string) => {\n    setCustomAmount(value)\n    const numValue = parseFloat(value)\n    if (!isNaN(numValue)) {\n      setValue('amount', numValue)\n      setSelectedAmount(null)\n    }\n  }\n\n  const onSubmit = (data: DonationFormData) => {\n    console.log('Donation submitted:', data)\n    // Handle donation submission\n  }\n\n  const canProceedToNext = () => {\n    switch (currentStep) {\n      case 1:\n        return watchedValues.amount && watchedValues.amount > 0\n      case 2:\n        return watchedValues.paymentMethod\n      case 3:\n        return watchedValues.email && watchedValues.name && !errors.email && !errors.name\n      default:\n        return true\n    }\n  }\n\n  return (\n    <div className=\"max-w-2xl mx-auto\">\n      {/* Progress Bar */}\n      <div className=\"mb-8\">\n        <div className=\"flex justify-between items-center mb-4\">\n          {steps.map((step) => (\n            <div\n              key={step.id}\n              className={`flex items-center ${\n                step.id < steps.length ? 'flex-1' : ''\n              }`}\n            >\n              <div\n                className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-semibold ${\n                  currentStep >= step.id\n                    ? 'bg-black text-white'\n                    : 'bg-gray-200 text-gray-600'\n                }`}\n              >\n                {step.id}\n              </div>\n              {step.id < steps.length && (\n                <div\n                  className={`flex-1 h-1 mx-2 ${\n                    currentStep > step.id ? 'bg-black' : 'bg-gray-200'\n                  }`}\n                />\n              )}\n            </div>\n          ))}\n        </div>\n        <div className=\"text-center\">\n          <h3 className=\"text-lg font-semibold text-black\">\n            {steps[currentStep - 1].title}\n          </h3>\n          <p className=\"text-gray-600 text-sm\">\n            {steps[currentStep - 1].description}\n          </p>\n        </div>\n      </div>\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <AnimatePresence mode=\"wait\">\n          {/* Step 1: Amount Selection */}\n          {currentStep === 1 && (\n            <motion.div\n              key=\"step1\"\n              initial={{ opacity: 0, x: 50 }}\n              animate={{ opacity: 1, x: 0 }}\n              exit={{ opacity: 0, x: -50 }}\n              transition={{ duration: 0.3 }}\n              className=\"space-y-6\"\n            >\n              <div>\n                <h2 className=\"text-2xl font-bold text-black mb-4\">\n                  Choose Your Donation Amount\n                </h2>\n                <p className=\"text-gray-600 mb-6\">\n                  Your support helps us maintain and improve our skateboard track for the community.\n                </p>\n\n                <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 mb-6\">\n                  {predefinedAmounts.map((amount) => (\n                    <button\n                      key={amount}\n                      type=\"button\"\n                      onClick={() => handleAmountSelect(amount)}\n                      className={`p-4 border-2 text-lg font-semibold transition-all duration-200 ${\n                        selectedAmount === amount\n                          ? 'border-black bg-black text-white'\n                          : 'border-gray-300 hover:border-gray-400'\n                      }`}\n                    >\n                      ${amount}\n                    </button>\n                  ))}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Or enter custom amount\n                  </label>\n                  <div className=\"relative\">\n                    <span className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500\">\n                      $\n                    </span>\n                    <input\n                      type=\"number\"\n                      value={customAmount}\n                      onChange={(e) => handleCustomAmount(e.target.value)}\n                      className=\"w-full pl-8 pr-4 py-3 border border-gray-300 focus:ring-2 focus:ring-black focus:border-transparent\"\n                      placeholder=\"0.00\"\n                      min=\"1\"\n                      step=\"0.01\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          )}\n\n          {/* Step 2: Payment Method */}\n          {currentStep === 2 && (\n            <motion.div\n              key=\"step2\"\n              initial={{ opacity: 0, x: 50 }}\n              animate={{ opacity: 1, x: 0 }}\n              exit={{ opacity: 0, x: -50 }}\n              transition={{ duration: 0.3 }}\n              className=\"space-y-6\"\n            >\n              <div>\n                <h2 className=\"text-2xl font-bold text-black mb-4\">\n                  Select Payment Method\n                </h2>\n                <p className=\"text-gray-600 mb-6\">\n                  Choose how you'd like to make your ${watchedValues.amount} donation.\n                </p>\n\n                <div className=\"space-y-4\">\n                  <label className=\"flex items-center p-4 border-2 border-gray-300 hover:border-gray-400 cursor-pointer transition-colors\">\n                    <input\n                      type=\"radio\"\n                      value=\"pix\"\n                      {...register('paymentMethod')}\n                      className=\"mr-4\"\n                    />\n                    <div>\n                      <div className=\"font-semibold\">PIX Payment</div>\n                      <div className=\"text-sm text-gray-600\">\n                        Instant payment via Brazilian PIX system\n                      </div>\n                    </div>\n                  </label>\n\n                  <label className=\"flex items-center p-4 border-2 border-gray-300 hover:border-gray-400 cursor-pointer transition-colors\">\n                    <input\n                      type=\"radio\"\n                      value=\"crypto\"\n                      {...register('paymentMethod')}\n                      className=\"mr-4\"\n                    />\n                    <div>\n                      <div className=\"font-semibold\">Cryptocurrency</div>\n                      <div className=\"text-sm text-gray-600\">\n                        Pay with Bitcoin, Ethereum, or other cryptocurrencies\n                      </div>\n                    </div>\n                  </label>\n\n                  <label className=\"flex items-center p-4 border-2 border-gray-300 hover:border-gray-400 cursor-pointer transition-colors\">\n                    <input\n                      type=\"radio\"\n                      value=\"card\"\n                      {...register('paymentMethod')}\n                      className=\"mr-4\"\n                    />\n                    <div>\n                      <div className=\"font-semibold\">Credit Card</div>\n                      <div className=\"text-sm text-gray-600\">\n                        Pay securely with your credit or debit card\n                      </div>\n                    </div>\n                  </label>\n                </div>\n              </div>\n            </motion.div>\n          )}\n\n          {/* Step 3: Personal Details */}\n          {currentStep === 3 && (\n            <motion.div\n              key=\"step3\"\n              initial={{ opacity: 0, x: 50 }}\n              animate={{ opacity: 1, x: 0 }}\n              exit={{ opacity: 0, x: -50 }}\n              transition={{ duration: 0.3 }}\n              className=\"space-y-6\"\n            >\n              <div>\n                <h2 className=\"text-2xl font-bold text-black mb-4\">\n                  Your Information\n                </h2>\n                <p className=\"text-gray-600 mb-6\">\n                  We'll send you a confirmation receipt for your donation.\n                </p>\n\n                <div className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Full Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      {...register('name')}\n                      className=\"w-full px-4 py-3 border border-gray-300 focus:ring-2 focus:ring-black focus:border-transparent\"\n                      placeholder=\"Enter your full name\"\n                    />\n                    {errors.name && (\n                      <p className=\"text-red-500 text-sm mt-1\">{errors.name.message}</p>\n                    )}\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Email Address\n                    </label>\n                    <input\n                      type=\"email\"\n                      {...register('email')}\n                      className=\"w-full px-4 py-3 border border-gray-300 focus:ring-2 focus:ring-black focus:border-transparent\"\n                      placeholder=\"Enter your email address\"\n                    />\n                    {errors.email && (\n                      <p className=\"text-red-500 text-sm mt-1\">{errors.email.message}</p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          )}\n\n          {/* Step 4: Payment Processing */}\n          {currentStep === 4 && (\n            <motion.div\n              key=\"step4\"\n              initial={{ opacity: 0, x: 50 }}\n              animate={{ opacity: 1, x: 0 }}\n              exit={{ opacity: 0, x: -50 }}\n              transition={{ duration: 0.3 }}\n            >\n              {watchedValues.paymentMethod === 'pix' && (\n                <PixPayment amount={watchedValues.amount} />\n              )}\n              {watchedValues.paymentMethod === 'crypto' && (\n                <CryptoPayment amount={watchedValues.amount} />\n              )}\n              {watchedValues.paymentMethod === 'card' && (\n                <div className=\"text-center py-8\">\n                  <h2 className=\"text-2xl font-bold text-black mb-4\">\n                    Credit Card Payment\n                  </h2>\n                  <p className=\"text-gray-600 mb-6\">\n                    Credit card integration would be implemented here with a secure payment processor.\n                  </p>\n                  <div className=\"bg-gray-100 p-6 rounded-lg\">\n                    <p className=\"text-gray-600\">\n                      This is a demo. In production, this would integrate with Stripe, PayPal, or another payment processor.\n                    </p>\n                  </div>\n                </div>\n              )}\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        {/* Navigation Buttons */}\n        <div className=\"flex justify-between mt-8\">\n          <button\n            type=\"button\"\n            onClick={prevStep}\n            disabled={currentStep === 1}\n            className={`px-6 py-3 font-semibold transition-colors ${\n              currentStep === 1\n                ? 'bg-gray-200 text-gray-400 cursor-not-allowed'\n                : 'bg-gray-200 text-black hover:bg-gray-300'\n            }`}\n          >\n            Previous\n          </button>\n\n          {currentStep < 4 ? (\n            <button\n              type=\"button\"\n              onClick={nextStep}\n              disabled={!canProceedToNext()}\n              className={`px-6 py-3 font-semibold transition-colors ${\n                canProceedToNext()\n                  ? 'bg-black text-white hover:bg-gray-800'\n                  : 'bg-gray-200 text-gray-400 cursor-not-allowed'\n              }`}\n            >\n              Next\n            </button>\n          ) : (\n            <button\n              type=\"submit\"\n              className=\"px-6 py-3 bg-black text-white font-semibold hover:bg-gray-800 transition-colors\"\n            >\n              Complete Donation\n            </button>\n          )}\n        </div>\n      </form>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}