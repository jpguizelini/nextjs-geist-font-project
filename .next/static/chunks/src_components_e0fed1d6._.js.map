{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Navigation.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport Link from 'next/link'\nimport { motion, AnimatePresence } from 'framer-motion'\n\nexport default function Navigation() {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const toggleMenu = () => setIsOpen(!isOpen)\n\n  const menuItems = [\n    { href: '/', label: 'Home' },\n    { href: '/gallery', label: 'Gallery' },\n    { href: '/donate', label: 'Donate' },\n    { href: '/nft', label: 'NFT Dashboard' },\n  ]\n\n  return (\n    <motion.header \n      className=\"sticky top-0 z-50 bg-black/90 backdrop-blur-md border-b border-white/10\"\n      initial={{ y: -100 }}\n      animate={{ y: 0 }}\n      transition={{ duration: 0.5 }}\n    >\n      <nav className=\"container mx-auto px-4 py-4\">\n        <div className=\"flex items-center justify-between\">\n          {/* Logo */}\n          <Link href=\"/\" className=\"text-2xl font-bold text-white\">\n            URBAN SKATE\n          </Link>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            {menuItems.map((item) => (\n              <Link\n                key={item.href}\n                href={item.href}\n                className=\"text-white hover:text-gray-300 transition-colors duration-200 font-medium\"\n              >\n                {item.label}\n              </Link>\n            ))}\n          </div>\n\n          {/* Mobile Menu Button */}\n          <button\n            onClick={toggleMenu}\n            className=\"md:hidden text-white focus:outline-none\"\n            aria-label=\"Toggle menu\"\n          >\n            <div className=\"w-6 h-6 flex flex-col justify-center items-center\">\n              <motion.span\n                className=\"w-6 h-0.5 bg-white block transition-all duration-300\"\n                animate={isOpen ? { rotate: 45, y: 2 } : { rotate: 0, y: 0 }}\n              />\n              <motion.span\n                className=\"w-6 h-0.5 bg-white block mt-1 transition-all duration-300\"\n                animate={isOpen ? { opacity: 0 } : { opacity: 1 }}\n              />\n              <motion.span\n                className=\"w-6 h-0.5 bg-white block mt-1 transition-all duration-300\"\n                animate={isOpen ? { rotate: -45, y: -2 } : { rotate: 0, y: 0 }}\n              />\n            </div>\n          </button>\n        </div>\n\n        {/* Mobile Menu */}\n        <AnimatePresence>\n          {isOpen && (\n            <motion.div\n              className=\"md:hidden mt-4 pb-4\"\n              initial={{ opacity: 0, height: 0 }}\n              animate={{ opacity: 1, height: 'auto' }}\n              exit={{ opacity: 0, height: 0 }}\n              transition={{ duration: 0.3 }}\n            >\n              <div className=\"flex flex-col space-y-4\">\n                {menuItems.map((item) => (\n                  <Link\n                    key={item.href}\n                    href={item.href}\n                    className=\"text-white hover:text-gray-300 transition-colors duration-200 font-medium py-2\"\n                    onClick={() => setIsOpen(false)}\n                  >\n                    {item.label}\n                  </Link>\n                ))}\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </nav>\n    </motion.header>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;;;AAJA;;;;AAMe,SAAS;;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,aAAa,IAAM,UAAU,CAAC;IAEpC,MAAM,YAAY;QAChB;YAAE,MAAM;YAAK,OAAO;QAAO;QAC3B;YAAE,MAAM;YAAY,OAAO;QAAU;QACrC;YAAE,MAAM;YAAW,OAAO;QAAS;QACnC;YAAE,MAAM;YAAQ,OAAO;QAAgB;KACxC;IAED,qBACE,6LAAC,6LAAA,CAAA,SAAM,CAAC,MAAM;QACZ,WAAU;QACV,SAAS;YAAE,GAAG,CAAC;QAAI;QACnB,SAAS;YAAE,GAAG;QAAE;QAChB,YAAY;YAAE,UAAU;QAAI;kBAE5B,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC,+JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAI,WAAU;sCAAgC;;;;;;sCAKzD,6LAAC;4BAAI,WAAU;sCACZ,UAAU,GAAG,CAAC,CAAC,qBACd,6LAAC,+JAAA,CAAA,UAAI;oCAEH,MAAM,KAAK,IAAI;oCACf,WAAU;8CAET,KAAK,KAAK;mCAJN,KAAK,IAAI;;;;;;;;;;sCAUpB,6LAAC;4BACC,SAAS;4BACT,WAAU;4BACV,cAAW;sCAEX,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,6LAAA,CAAA,SAAM,CAAC,IAAI;wCACV,WAAU;wCACV,SAAS,SAAS;4CAAE,QAAQ;4CAAI,GAAG;wCAAE,IAAI;4CAAE,QAAQ;4CAAG,GAAG;wCAAE;;;;;;kDAE7D,6LAAC,6LAAA,CAAA,SAAM,CAAC,IAAI;wCACV,WAAU;wCACV,SAAS,SAAS;4CAAE,SAAS;wCAAE,IAAI;4CAAE,SAAS;wCAAE;;;;;;kDAElD,6LAAC,6LAAA,CAAA,SAAM,CAAC,IAAI;wCACV,WAAU;wCACV,SAAS,SAAS;4CAAE,QAAQ,CAAC;4CAAI,GAAG,CAAC;wCAAE,IAAI;4CAAE,QAAQ;4CAAG,GAAG;wCAAE;;;;;;;;;;;;;;;;;;;;;;;8BAOrE,6LAAC,4LAAA,CAAA,kBAAe;8BACb,wBACC,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;wBACT,WAAU;wBACV,SAAS;4BAAE,SAAS;4BAAG,QAAQ;wBAAE;wBACjC,SAAS;4BAAE,SAAS;4BAAG,QAAQ;wBAAO;wBACtC,MAAM;4BAAE,SAAS;4BAAG,QAAQ;wBAAE;wBAC9B,YAAY;4BAAE,UAAU;wBAAI;kCAE5B,cAAA,6LAAC;4BAAI,WAAU;sCACZ,UAAU,GAAG,CAAC,CAAC,qBACd,6LAAC,+JAAA,CAAA,UAAI;oCAEH,MAAM,KAAK,IAAI;oCACf,WAAU;oCACV,SAAS,IAAM,UAAU;8CAExB,KAAK,KAAK;mCALN,KAAK,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAelC;GA1FwB;KAAA","debugId":null}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/NFTDashboard/NFTDashboard.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\n\ninterface NFT {\n  id: number\n  name: string\n  description: string\n  image: string\n  tokenId: string\n  contractAddress: string\n  rarity: 'common' | 'rare' | 'legendary'\n  mintDate: string\n}\n\ninterface Transaction {\n  id: string\n  type: 'mint' | 'transfer' | 'purchase'\n  nftName: string\n  date: string\n  txHash: string\n  status: 'confirmed' | 'pending' | 'failed'\n}\n\ninterface WalletInfo {\n  address: string\n  connected: boolean\n  balance: string\n}\n\n// Mock NFT data\nconst mockNFTs: NFT[] = [\n  {\n    id: 1,\n    name: 'Urban Rider #001',\n    description: 'First edition skateboard track NFT featuring the main bowl',\n    image: 'https://images.pexels.com/photos/416978/pexels-photo-416978.jpeg',\n    tokenId: '1',\n    contractAddress: '0x742d35Cc6634C0532925a3b8D4C9db96590b5c8e',\n    rarity: 'legendary',\n    mintDate: '2024-01-15'\n  },\n  {\n    id: 2,\n    name: 'Street Session #042',\n    description: 'Commemorative NFT from the 2024 Street Competition',\n    image: 'https://images.pexels.com/photos/1263349/pexels-photo-1263349.jpeg',\n    tokenId: '42',\n    contractAddress: '0x742d35Cc6634C0532925a3b8D4C9db96590b5c8e',\n    rarity: 'rare',\n    mintDate: '2024-02-20'\n  },\n  {\n    id: 3,\n    name: 'Community Badge #156',\n    description: 'Special badge for active community members',\n    image: 'https://images.pexels.com/photos/1263348/pexels-photo-1263348.jpeg',\n    tokenId: '156',\n    contractAddress: '0x742d35Cc6634C0532925a3b8D4C9db96590b5c8e',\n    rarity: 'common',\n    mintDate: '2024-03-10'\n  }\n]\n\n// Mock transaction data\nconst mockTransactions: Transaction[] = [\n  {\n    id: '1',\n    type: 'mint',\n    nftName: 'Community Badge #156',\n    date: '2024-03-10',\n    txHash: '0x1234567890abcdef1234567890abcdef12345678',\n    status: 'confirmed'\n  },\n  {\n    id: '2',\n    type: 'mint',\n    nftName: 'Street Session #042',\n    date: '2024-02-20',\n    txHash: '0xabcdef1234567890abcdef1234567890abcdef12',\n    status: 'confirmed'\n  },\n  {\n    id: '3',\n    type: 'mint',\n    nftName: 'Urban Rider #001',\n    date: '2024-01-15',\n    txHash: '0x567890abcdef1234567890abcdef1234567890ab',\n    status: 'confirmed'\n  }\n]\n\nexport default function NFTDashboard() {\n  const [walletInfo, setWalletInfo] = useState<WalletInfo | null>(null)\n  const [userNFTs, setUserNFTs] = useState<NFT[]>([])\n  const [transactions, setTransactions] = useState<Transaction[]>([])\n  const [connecting, setConnecting] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [minting, setMinting] = useState(false)\n  const [activeTab, setActiveTab] = useState<'nfts' | 'mint' | 'history'>('nfts')\n\n  const connectWallet = async () => {\n    setConnecting(true)\n    \n    try {\n      // Check if MetaMask is installed\n      if (typeof window !== 'undefined' && (window as any).ethereum) {\n        const accounts = await (window as any).ethereum.request({\n          method: 'eth_requestAccounts'\n        })\n        \n        if (accounts.length > 0) {\n          setWalletInfo({\n            address: accounts[0],\n            connected: true,\n            balance: '2.5847'\n          })\n          \n          // Load user's NFTs\n          setLoading(true)\n          await new Promise(resolve => setTimeout(resolve, 2000))\n          setUserNFTs(mockNFTs)\n          setTransactions(mockTransactions)\n          setLoading(false)\n        }\n      } else {\n        // MetaMask not installed - show mock connection for demo\n        await new Promise(resolve => setTimeout(resolve, 2000))\n        \n        setWalletInfo({\n          address: '0x742d35Cc6634C0532925a3b8D4C9db96590b5c8e',\n          connected: true,\n          balance: '2.5847'\n        })\n        \n        setLoading(true)\n        await new Promise(resolve => setTimeout(resolve, 1000))\n        setUserNFTs(mockNFTs)\n        setTransactions(mockTransactions)\n        setLoading(false)\n      }\n    } catch (error) {\n      console.error('Failed to connect wallet:', error)\n      alert('Failed to connect wallet. Please try again.')\n    } finally {\n      setConnecting(false)\n    }\n  }\n\n  const disconnectWallet = () => {\n    setWalletInfo(null)\n    setUserNFTs([])\n    setTransactions([])\n  }\n\n  const mintNFT = async () => {\n    if (!walletInfo) return\n    \n    setMinting(true)\n    \n    try {\n      // Simulate minting process\n      await new Promise(resolve => setTimeout(resolve, 3000))\n      \n      // Add new NFT to collection\n      const newNFT: NFT = {\n        id: userNFTs.length + 1,\n        name: `Track Supporter #${String(Math.floor(Math.random() * 1000)).padStart(3, '0')}`,\n        description: 'Special NFT for track supporters and donors',\n        image: 'https://images.pexels.com/photos/1263347/pexels-photo-1263347.jpeg',\n        tokenId: String(userNFTs.length + 1),\n        contractAddress: '0x742d35Cc6634C0532925a3b8D4C9db96590b5c8e',\n        rarity: 'common',\n        mintDate: new Date().toISOString().split('T')[0]\n      }\n      \n      setUserNFTs([...userNFTs, newNFT])\n      \n      // Add transaction record\n      const newTransaction: Transaction = {\n        id: String(transactions.length + 1),\n        type: 'mint',\n        nftName: newNFT.name,\n        date: newNFT.mintDate,\n        txHash: '0x' + Math.random().toString(16).substring(2, 66),\n        status: 'confirmed'\n      }\n      \n      setTransactions([newTransaction, ...transactions])\n      \n      alert('NFT minted successfully!')\n    } catch (error) {\n      console.error('Minting failed:', error)\n      alert('Failed to mint NFT. Please try again.')\n    } finally {\n      setMinting(false)\n    }\n  }\n\n  const formatAddress = (address: string) => {\n    return `${address.slice(0, 6)}...${address.slice(-4)}`\n  }\n\n  const getRarityColor = (rarity: string) => {\n    switch (rarity) {\n      case 'legendary': return 'text-yellow-600 bg-yellow-100'\n      case 'rare': return 'text-purple-600 bg-purple-100'\n      case 'common': return 'text-gray-600 bg-gray-100'\n      default: return 'text-gray-600 bg-gray-100'\n    }\n  }\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'confirmed': return 'text-green-600 bg-green-100'\n      case 'pending': return 'text-yellow-600 bg-yellow-100'\n      case 'failed': return 'text-red-600 bg-red-100'\n      default: return 'text-gray-600 bg-gray-100'\n    }\n  }\n\n  if (!walletInfo) {\n    return (\n      <div className=\"max-w-2xl mx-auto text-center py-12\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n        >\n          <h2 className=\"text-3xl font-bold text-black mb-6\">\n            Connect Your Wallet\n          </h2>\n          <p className=\"text-gray-600 mb-8\">\n            Connect your Web3 wallet to view your NFT collection, mint new tokens, \n            and track your transaction history.\n          </p>\n          \n          <div className=\"bg-gray-50 p-8 rounded-lg border border-gray-200 mb-8\">\n            <div className=\"text-4xl mb-4\">🎨</div>\n            <h3 className=\"text-xl font-semibold text-black mb-4\">\n              Urban Skate Track NFTs\n            </h3>\n            <p className=\"text-gray-600 text-sm mb-6\">\n              Collect unique digital assets that represent your connection to our \n              skateboarding community. Each NFT tells a story and grants special privileges.\n            </p>\n            \n            <button\n              onClick={connectWallet}\n              disabled={connecting}\n              className={`px-8 py-3 font-semibold transition-colors ${\n                connecting\n                  ? 'bg-gray-400 text-white cursor-not-allowed'\n                  : 'bg-black text-white hover:bg-gray-800'\n              }`}\n            >\n              {connecting ? (\n                <div className=\"flex items-center justify-center\">\n                  <motion.div\n                    className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full mr-2\"\n                    animate={{ rotate: 360 }}\n                    transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n                  />\n                  Connecting...\n                </div>\n              ) : (\n                'Connect Wallet'\n              )}\n            </button>\n          </div>\n\n          <div className=\"text-left bg-blue-50 border border-blue-200 p-4 rounded-lg\">\n            <h4 className=\"font-semibold text-blue-800 mb-2\">\n              Supported Wallets\n            </h4>\n            <ul className=\"text-blue-700 text-sm space-y-1\">\n              <li>• MetaMask</li>\n              <li>• WalletConnect</li>\n              <li>• Coinbase Wallet</li>\n              <li>• Trust Wallet</li>\n            </ul>\n          </div>\n        </motion.div>\n      </div>\n    )\n  }\n\n  return (\n    <motion.div\n      className=\"max-w-6xl mx-auto\"\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n    >\n      {/* Wallet Info Header */}\n      <div className=\"bg-black text-white p-6 rounded-lg mb-8\">\n        <div className=\"flex justify-between items-start\">\n          <div>\n            <h2 className=\"text-2xl font-bold mb-2\">NFT Dashboard</h2>\n            <p className=\"text-gray-300 text-sm\">\n              <strong>Address:</strong> {formatAddress(walletInfo.address)}\n            </p>\n            <p className=\"text-gray-300 text-sm\">\n              <strong>Balance:</strong> {walletInfo.balance} ETH\n            </p>\n          </div>\n          <button\n            onClick={disconnectWallet}\n            className=\"bg-gray-700 hover:bg-gray-600 text-white px-4 py-2 text-sm transition-colors\"\n          >\n            Disconnect\n          </button>\n        </div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"flex space-x-1 mb-8 bg-gray-100 p-1 rounded-lg\">\n        {[\n          { id: 'nfts', label: 'My NFTs', count: userNFTs.length },\n          { id: 'mint', label: 'Mint New' },\n          { id: 'history', label: 'Transaction History', count: transactions.length }\n        ].map((tab) => (\n          <button\n            key={tab.id}\n            onClick={() => setActiveTab(tab.id as any)}\n            className={`flex-1 py-3 px-4 text-sm font-medium transition-colors ${\n              activeTab === tab.id\n                ? 'bg-white text-black shadow-sm'\n                : 'text-gray-600 hover:text-black'\n            }`}\n          >\n            {tab.label}\n            {tab.count !== undefined && (\n              <span className=\"ml-2 bg-gray-200 text-gray-600 px-2 py-1 rounded-full text-xs\">\n                {tab.count}\n              </span>\n            )}\n          </button>\n        ))}\n      </div>\n\n      <AnimatePresence mode=\"wait\">\n        {/* My NFTs Tab */}\n        {activeTab === 'nfts' && (\n          <motion.div\n            key=\"nfts\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n            transition={{ duration: 0.3 }}\n          >\n            {loading ? (\n              <div className=\"text-center py-12\">\n                <motion.div\n                  className=\"inline-block w-8 h-8 border-4 border-gray-300 border-t-black rounded-full\"\n                  animate={{ rotate: 360 }}\n                  transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n                />\n                <p className=\"mt-4 text-gray-600\">Loading your NFTs...</p>\n              </div>\n            ) : userNFTs.length === 0 ? (\n              <div className=\"text-center py-12\">\n                <div className=\"text-6xl mb-4\">🎨</div>\n                <h3 className=\"text-xl font-semibold text-black mb-2\">\n                  No NFTs Yet\n                </h3>\n                <p className=\"text-gray-600 mb-6\">\n                  You don't have any Urban Skate Track NFTs yet. \n                  Start by minting your first one!\n                </p>\n                <button\n                  onClick={() => setActiveTab('mint')}\n                  className=\"bg-black text-white px-6 py-3 font-semibold hover:bg-gray-800 transition-colors\"\n                >\n                  Mint Your First NFT\n                </button>\n              </div>\n            ) : (\n              <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {userNFTs.map((nft, index) => (\n                  <motion.div\n                    key={nft.id}\n                    className=\"bg-white border border-gray-200 rounded-lg overflow-hidden hover:shadow-lg transition-shadow\"\n                    initial={{ opacity: 0, scale: 0.9 }}\n                    animate={{ opacity: 1, scale: 1 }}\n                    transition={{ duration: 0.3, delay: index * 0.1 }}\n                  >\n                    <img\n                      src={nft.image}\n                      alt={nft.name}\n                      className=\"w-full h-48 object-cover\"\n                    />\n                    <div className=\"p-4\">\n                      <div className=\"flex justify-between items-start mb-2\">\n                        <h3 className=\"font-semibold text-black\">{nft.name}</h3>\n                        <span className={`px-2 py-1 text-xs rounded-full ${getRarityColor(nft.rarity)}`}>\n                          {nft.rarity}\n                        </span>\n                      </div>\n                      <p className=\"text-gray-600 text-sm mb-3\">{nft.description}</p>\n                      <div className=\"text-xs text-gray-500 space-y-1\">\n                        <div>Token ID: #{nft.tokenId}</div>\n                        <div>Minted: {nft.mintDate}</div>\n                      </div>\n                      <div className=\"mt-4 flex space-x-2\">\n                        <button className=\"flex-1 bg-gray-100 text-black px-3 py-2 text-sm hover:bg-gray-200 transition-colors\">\n                          View Details\n                        </button>\n                        <button className=\"flex-1 bg-black text-white px-3 py-2 text-sm hover:bg-gray-800 transition-colors\">\n                          Transfer\n                        </button>\n                      </div>\n                    </div>\n                  </motion.div>\n                ))}\n              </div>\n            )}\n          </motion.div>\n        )}\n\n        {/* Mint New Tab */}\n        {activeTab === 'mint' && (\n          <motion.div\n            key=\"mint\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n            transition={{ duration: 0.3 }}\n            className=\"max-w-2xl mx-auto\"\n          >\n            <div className=\"bg-white border border-gray-200 rounded-lg p-8\">\n              <h3 className=\"text-2xl font-bold text-black mb-6\">\n                Mint New NFT\n              </h3>\n              \n              <div className=\"bg-gray-50 p-6 rounded-lg mb-6\">\n                <h4 className=\"font-semibold text-black mb-4\">\n                  Track Supporter Collection\n                </h4>\n                <p className=\"text-gray-600 text-sm mb-4\">\n                  Mint a special NFT to show your support for the Urban Skate Track community. \n                  Each NFT is unique and grants you special privileges within our ecosystem.\n                </p>\n                \n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                  <div>\n                    <span className=\"font-medium\">Mint Price:</span>\n                    <div>0.01 ETH (~$20)</div>\n                  </div>\n                  <div>\n                    <span className=\"font-medium\">Supply:</span>\n                    <div>Unlimited</div>\n                  </div>\n                  <div>\n                    <span className=\"font-medium\">Benefits:</span>\n                    <div>Community access</div>\n                  </div>\n                  <div>\n                    <span className=\"font-medium\">Rarity:</span>\n                    <div>Common</div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-blue-50 border border-blue-200 p-4 rounded-lg mb-6\">\n                <h4 className=\"font-semibold text-blue-800 mb-2\">\n                  NFT Benefits\n                </h4>\n                <ul className=\"text-blue-700 text-sm space-y-1\">\n                  <li>• Exclusive access to community events</li>\n                  <li>• Voting rights on track improvements</li>\n                  <li>• Special discounts on merchandise</li>\n                  <li>• Priority booking for private sessions</li>\n                </ul>\n              </div>\n\n              <button\n                onClick={mintNFT}\n                disabled={minting}\n                className={`w-full py-4 font-semibold transition-colors ${\n                  minting\n                    ? 'bg-gray-400 text-white cursor-not-allowed'\n                    : 'bg-black text-white hover:bg-gray-800'\n                }`}\n              >\n                {minting ? (\n                  <div className=\"flex items-center justify-center\">\n                    <motion.div\n                      className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full mr-2\"\n                      animate={{ rotate: 360 }}\n                      transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n                    />\n                    Minting NFT...\n                  </div>\n                ) : (\n                  'Mint NFT (0.01 ETH)'\n                )}\n              </button>\n            </div>\n          </motion.div>\n        )}\n\n        {/* Transaction History Tab */}\n        {activeTab === 'history' && (\n          <motion.div\n            key=\"history\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n            transition={{ duration: 0.3 }}\n          >\n            <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n              <div className=\"p-6 border-b border-gray-200\">\n                <h3 className=\"text-xl font-bold text-black\">\n                  Transaction History\n                </h3>\n                <p className=\"text-gray-600 text-sm\">\n                  Your NFT-related transactions on the blockchain\n                </p>\n              </div>\n              \n              {transactions.length === 0 ? (\n                <div className=\"p-8 text-center\">\n                  <div className=\"text-4xl mb-4\">📜</div>\n                  <h4 className=\"font-semibold text-black mb-2\">\n                    No Transactions Yet\n                  </h4>\n                  <p className=\"text-gray-600\">\n                    Your transaction history will appear here once you start minting or trading NFTs.\n                  </p>\n                </div>\n              ) : (\n                <div className=\"divide-y divide-gray-200\">\n                  {transactions.map((tx) => (\n                    <div key={tx.id} className=\"p-6 hover:bg-gray-50 transition-colors\">\n                      <div className=\"flex justify-between items-start\">\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center space-x-3 mb-2\">\n                            <span className=\"capitalize font-medium text-black\">\n                              {tx.type}\n                            </span>\n                            <span className={`px-2 py-1 text-xs rounded-full ${getStatusColor(tx.status)}`}>\n                              {tx.status}\n                            </span>\n                          </div>\n                          <p className=\"text-gray-600 text-sm mb-1\">\n                            {tx.nftName}\n                          </p>\n                          <p className=\"text-gray-500 text-xs\">\n                            {tx.date}\n                          </p>\n                        </div>\n                        <div className=\"text-right\">\n                          <a\n                            href={`https://etherscan.io/tx/${tx.txHash}`}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"text-blue-600 hover:text-blue-800 text-sm underline\"\n                          >\n                            View on Etherscan\n                          </a>\n                          <p className=\"text-gray-500 text-xs mt-1\">\n                            {formatAddress(tx.txHash)}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </motion.div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}